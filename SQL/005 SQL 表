normal forms
normalization 把数据写成数据类型的表
一般用1NF,2NF,3NF即可，

第一范式 1NF：
要求：每一个分量必须是不可分的数据项。
特点：
1）有主键，且主键不能为空。
2）字段不能再分。
/*学号      年龄        信息*/
  Sno       Sage        Sinfo
  1001      19          陕西省西安市，电话：10086

  1001      20          陕西，宝鸡

主键：Sno
不满足原因：1）主键重复。2）Sinfo字段可以再分。

二、第二范式 2NF
要求：在范式一的基础上，且每一个非主属性完全函数依赖于码。
特点：
1）满足第一范式。
2）表中的每一个非主属性，必须完全依赖于本表码。
3）只有当一个表中，主码由两个或以上的属性组成的时候，才会出现不符合第二范式的情况。
示例：（以下例子 不符合 第二范式）
/*学号    课程号     得分    课程名*/
  Sno      Cno      Score    Sname
  1001     001       99      数据库
主键： Sno,Cno
不满足原因：Sname不完全依赖于码，课程名部分依赖于码Cno。

三、第三范式 3NF
要求：在满足第二范式的基础上，且每一个非主属性既不部分依赖于码也不传递依赖于码。
特点：
1）满足第二范式。
2）非主属性不能传递依赖于码。
示例：（以下例子 不符合 第三范式）
/*学号     系别     系主任*/
  Sno     Sdept     Shead
  1001   计算机系    张三
主键：Sno
不满足原因：Shead传递依赖于码，Sno->Sdept->Shead，可得Sno->Shead。


1：1 至少两张表
1：N 至少两张表
N: N 至少三张表

设计书店数据库
书 和 作者 N:N
书 和 书详细信息 1：1
书 和 书的类型   1：N
外键约束，比如书的类型约定了1，2，3，书里面取书的类型填写只能1|2|3，不能4
加外键完整性，但是性能损失



复习：
表操作方式：增删查改
数据对应关系 ： 1v1,1vN,NvN
是否需要外键：关系是天然的，不是必须外键约束，SQL对于数据特殊处理，所以有的时候用外键约束。


//交友原则： kind, smart
//微软 周二更新，


插入：
USE [Bookstore]
GO
//如上两局可以省略，只是强制转化为Bookstore数据库
INSERT INTO [dbo].[Book]   //into 可以省略
           ([CategoryID],[Name],[Price])
     VALUES
           (null,N'西游记',9.9),
		       (null,N'红楼梦',9.9),
		       (null,N'水浒传',9.9),
		       (null,N'三国演义',9.9)
GO
output:(2 rows affected)//告诉客户端
set nocount on //如果把这行到最前面，则没有output输出，不记录对于rows的影响，
set nocount on /一般用于大批量插入数据（增删查改），没有该行的话，需要计数，有性能损失
set nocount off


//修改值
update
USE [Bookstore]
GO
UPDATE [dbo].[Book]
   SET [Name] = [Name]+N'(上)'
 WHERE ID=9
GO


删除重复值：
USE [Bookstore]
GO

DELETE FROM [dbo].[Book]
      WHERE ID not in (
	  select MIN(ID)
	  FROM [dbo].[Book]
	  GROUP BY [Name]
	  ) 
GO

select * from Book


数据类型不但决定了值在内存中的尺寸和存储方式，也决定了值的行为


数值运算：

select '100'+100    200
select 100+'100'    200
select '100'+'100'  '100100' SQL数据交换位置不影响行为
select 100+100     200

值的行为是通过操作符表示出来的
